# Задача 16: Требуется вычислить, сколько раз
# встречается некоторое число X в массиве A[1..N].
# Пользователь вводит натуральное число N – количество
# элементов в массиве и число, которое необходимо проверить - X.
# Заполните массив случайными натуральными числами от 1 до N/2.
# Выведите, сколько раз X встречается в массиве.

# import random as r

# while True:
#     try:
#         N = int(input('Введите число N: '))
#         X = int(input('Введите число X: '))
#         if N >= 2 and X >= 1:
#             A = []
#             for i in range(0, N):
#                 A.append(r.randint(1, N//2))
#             print(A)
#             count = 0
#             for j in A:
#                 if j == X:
#                     count += 1
#             print(count)
#             break
#         else:
#             print('N и X должны быть натуральными числами, попробуйте еще раз')
#     except:
#         print('Некорректный ввод, попробуйте еще раз')

# Задача 18: Требуется найти в массиве A[1..N]
# самый близкий по величине элемент к заданному числу X.
# Пользователь вводит натуральное число N – количество
# элементов в массиве и число, которое необходимо проверить - X.
# Заполните массив случайными натуральными числами от 1 до N.
# Выведите, ближайший к X элемент. Если есть несколько элементов,
# которые равноудалены от X, выведите наименьший по величине.

# import random as r

# while True:
#     try:
#         N = int(input('Введите число N: '))
#         X = int(input('Введите число X: '))
#         if N >= 1 and X >= 1:
#             A = []
#             for i in range(0, N):
#                 A.append(r.randint(1, N))
#             print(A)
#             min = N
#             for j in A:
#                 if abs(j - X) < min:
#                     last_find = j
#                     find = j
#                     min = abs(j - X)
#                 if abs(j - X) == min:
#                     if last_find > j:
#                         find = j
#                     else:
#                         continue
#             print(find)
#             break
#         else:
#             print('N и X должны быть натуральными числами, попробуйте еще раз')
#     except:
#         print('Некорректный ввод, попробуйте еще раз')

# Задача 20: В настольной игре Скрабл (Scrabble)
# каждая буква имеет определенную ценность.
# Напишите программу, которая вычисляет стоимость
# введенного пользователем слова.
# Будем считать, что на вход подается только одно слово,
# которое содержит либо только английские, либо только русские буквы.

# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.

# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.

latin_char = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
latin_point = [1,3,3,2,1,4,2,4,1,8,5,1,3,1,1,3,10,1,1,1,1,4,4,8,4,10]
russian_char = ['А','Б','В','Г','Д','Е','Ё','Ж','З','И','Й','К','Л','М','Н','О','П','Р','С','Т','У','Ф','Х','Ц','Ч','Ш','Щ','Ъ','Ы','Ь','Э','Ю','Я']
russian_point = [1,3,1,3,2,1,3,5,5,1,4,2,2,2,1,1,2,1,1,1,2,10,5,5,5,8,10,10,4,3,8,8,3]

user_word = str(input('Введите слово: '))

def count_points(word, char_array, point_array):
    count = 0
    j = 0
    for i in word:
        while j < len(char_array):
            if i.upper() == char_array[j]:
                count += point_array[j]
            j += 1
        j = 0
    return count


count_rus = count_points(user_word, russian_char, russian_point)
count_lat = count_points(user_word, latin_char, latin_point)

if count_rus == 0: print(count_lat)
if count_lat == 0: print(count_rus)
else: print('Слово должно состоять только из русских или только из английских букв')